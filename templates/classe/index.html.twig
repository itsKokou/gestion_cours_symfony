{% extends 'base.html.twig' %}

{% block title %}Classe{% endblock %}

{% block content %}
<div class=" mt-6 flex justify-end">
  <a href="{{path('app_classe_save')}}"
    class="px-4 py-2 text-base font-medium leading-5 text-cyan-500 transition-colors duration-150 bg-transparent border-2 border-cyan-500 rounded-lg hover:text-white hover:bg-cyan-500  focus:outline-none focus:shadow-outline-purple"
  >
    Nouveau
  </a>
</div>
<div class="w-full flex">
    <form style="width: 50%;" class="w-auto rounded-lg px-4 py-3 mt-4 text-gray-500 border bg-white dark:border-gray-700 dark:text-gray-400 dark:bg-gray-900">
      <div  class="inline-flex mt-1 mb-2 w-full justify-center">
        <div style="width: 38%; margin-right:80px;" class="text-base px-4 py-3 border border-gray-300 rounded-md dark:bg-zinc-600">
          <label for="select-classe-niveau" class="block mb-2 font-medium text-gray-900 dark:text-white">Niveau</label>
          <select id="select-classe-niveau" style="width:80%;" class="bg-gray-50 dark:bg-white border border-gray-300 text-gray-900 rounded focus:ring-blue-500 focus:border-blue-500 block p-2.5  dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-700 dark:focus:ring-blue-500 dark:focus:border-blue-500">
            <option data-path="{{ path('classe_filtre_niveau',{idN:0}) }}" value='0' >All</option>
            {% for item in niveaux %}
              <option data-path="{{ path('classe_filtre_niveau',{idN:item.id}) }}"
              {% if selectedValue['niveau'] is defined and selectedValue['niveau']== item.id %}selected{% endif %} 
              value="{{item.id}}">{{item.libelle}}</option>  
            {% endfor %}
          </select>
        </div>
        <div style="width: 38%;" class="text-base px-4 py-3 border border-gray-300 rounded-md dark:bg-zinc-600">
          <label for="select-classe-filiere" class="block mb-2 font-medium text-gray-900 dark:text-white">Filière</label>
          <select id="select-classe-filiere" style="width:80%;" class="bg-gray-50 dark:bg-white border border-gray-300 text-gray-900 rounded focus:ring-blue-500 focus:border-blue-500 block w-96 p-2.5 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-700 dark:focus:ring-blue-500 dark:focus:border-blue-500">
            <option data-path="{{ path('classe_filtre_filiere',{idF:0}) }}" value='0' >All</option>
            {% for item in filieres %}
              <option data-path="{{ path('classe_filtre_filiere',{idF:item.id}) }}"
              {% if selectedValue['filiere'] is defined and selectedValue['filiere']== item.id %}selected{% endif %}
              value="{{item.id}}">{{item.libelle}}</option>  
            {% endfor %}
          </select>
        </div>
        
      </div>
    </form>
</div>
  <h4 class="mb-4 mt-4 text-lg font-semibold text-gray-600 dark:text-white">
    Liste des Classes
  </h4>

  <div class="w-full overflow-hidden rounded-lg shadow-xs">
    <div class="w-full overflow-x-auto">
      <table class="w-full whitespace-no-wrap">
        <thead>
          <tr
            class="text-sm font-semibold tracking-wide text-left text-gray-500 uppercase border-b dark:border-gray-700 bg-gray-50 dark:bg-gray-900"
            style="color:#eb1616;"
          >
            <th class="px-4 py-3">{{ knp_pagination_sortable(pagination, 'N°', 'c.id') }}</th>
            <th class="px-4 py-3 {{ pagination.isSorted('c.libelle') ? 'sorted':'' }}">
              {{ knp_pagination_sortable(pagination, 'Libellé', 'c.libelle') }}
            </th>
            <th class="px-4 py-3 {{ pagination.isSorted('n.libelle') ? 'sorted':'' }}">
              {{ knp_pagination_sortable(pagination, 'Niveau', 'n.libelle') }}
            </th>
            <th class="px-4 py-3 {{ pagination.isSorted('f.libelle') ? 'sorted':'' }}">
              {{ knp_pagination_sortable(pagination, 'Filière', 'f.libelle') }}
            </th>
            <th class="px-4 py-3 {{ pagination.isSorted('c.effectif') ? 'sorted':'' }}">
              {{ knp_pagination_sortable(pagination, 'Effectif', 'c.effectif') }}
            </th>
            <th class="px-4 py-3">Actions</th>
          </tr>
        </thead>
        <tbody
          class="bg-white divide-y dark:divide-gray-700 dark:bg-gray-900"
        >
        {% for cl in pagination %}
          <tr class="text-gray-700 dark:text-gray-400">
            <td class="px-4 py-3 text-sm">
              {{cl.id}}
            </td>
            <td class="px-4 py-3 text-sm">
              {{cl.libelle}}
            </td>
            <td class="px-4 py-3 text-sm">
              {{cl.niveau.libelle}}
            </td>
            <td class="px-4 py-3 text-sm">
              {{cl.filiere.libelle}}
            </td>
            <td class="px-4 py-3 text-sm">
              {{cl.effectif}}
            </td>
            <td class="px-4 py-3">
              <div class="flex items-center space-x-4 text-sm">
                <a href="{{path('app_classe_save',{id:cl.id})}}" class="text-yellow-500 border rounded-md border-yellow-500 hover:bg-yellow-500 hover:text-white">
                  <button
                  class="flex items-center justify-between px-2 py-2 text-sm font-medium leading-5  rounded-lg focus:outline-none focus:shadow-outline-gray"
                  aria-label="Edit"
                >
                  <svg
                    class="w-5 h-5"
                    aria-hidden="true"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"
                    ></path>
                  </svg>Edit
                </button>
                </a>
                
              </div>
            </td>
          </tr>
        {% endfor %}    
        </tbody>
      </table>
    </div>
  <div class="navigation">
    {{ knp_pagination_render(pagination) }}
  </div>  
        
{% endblock %}

{% block js %}
  <script>
    const classe_niveau =document.querySelector('#select-classe-niveau');
    getData(classe_niveau);
    const classe_filiere =document.querySelector('#select-classe-filiere');
    getData(classe_filiere);
  </script>
{% endblock %}
